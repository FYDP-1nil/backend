# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from . import stats_pb2 as stats__pb2


class StatsStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.CreateGame = channel.unary_unary(
                '/stats.Stats/CreateGame',
                request_serializer=stats__pb2.CreateGameRequest.SerializeToString,
                response_deserializer=stats__pb2.CreateGameResponse.FromString,
                )
        self.GetShots = channel.unary_unary(
                '/stats.Stats/GetShots',
                request_serializer=stats__pb2.GetShotsRequest.SerializeToString,
                response_deserializer=stats__pb2.GetShotsResponse.FromString,
                )
        self.GetFouls = channel.unary_unary(
                '/stats.Stats/GetFouls',
                request_serializer=stats__pb2.GetFoulsRequest.SerializeToString,
                response_deserializer=stats__pb2.GetFoulsResponse.FromString,
                )
        self.GetOffsides = channel.unary_unary(
                '/stats.Stats/GetOffsides',
                request_serializer=stats__pb2.GetOffsidesRequest.SerializeToString,
                response_deserializer=stats__pb2.GetOffsidesResponse.FromString,
                )
        self.SetShot = channel.unary_unary(
                '/stats.Stats/SetShot',
                request_serializer=stats__pb2.SetShotRequest.SerializeToString,
                response_deserializer=stats__pb2.SetShotResponse.FromString,
                )
        self.SetFoul = channel.unary_unary(
                '/stats.Stats/SetFoul',
                request_serializer=stats__pb2.SetFoulRequest.SerializeToString,
                response_deserializer=stats__pb2.SetFoulResponse.FromString,
                )
        self.SetOffside = channel.unary_unary(
                '/stats.Stats/SetOffside',
                request_serializer=stats__pb2.SetOffsideRequest.SerializeToString,
                response_deserializer=stats__pb2.SetOffsideResponse.FromString,
                )
        self.SetEndGame = channel.unary_unary(
                '/stats.Stats/SetEndGame',
                request_serializer=stats__pb2.SetEndGameRequest.SerializeToString,
                response_deserializer=stats__pb2.SetEndGameResponse.FromString,
                )
        self.SetEvent = channel.unary_unary(
                '/stats.Stats/SetEvent',
                request_serializer=stats__pb2.SetEventRequest.SerializeToString,
                response_deserializer=stats__pb2.SetEventResponse.FromString,
                )


class StatsServicer(object):
    """Missing associated documentation comment in .proto file."""

    def CreateGame(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetShots(self, request, context):
        """read operations
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetFouls(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetOffsides(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SetShot(self, request, context):
        """write operations
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SetFoul(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SetOffside(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SetEndGame(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SetEvent(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_StatsServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'CreateGame': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateGame,
                    request_deserializer=stats__pb2.CreateGameRequest.FromString,
                    response_serializer=stats__pb2.CreateGameResponse.SerializeToString,
            ),
            'GetShots': grpc.unary_unary_rpc_method_handler(
                    servicer.GetShots,
                    request_deserializer=stats__pb2.GetShotsRequest.FromString,
                    response_serializer=stats__pb2.GetShotsResponse.SerializeToString,
            ),
            'GetFouls': grpc.unary_unary_rpc_method_handler(
                    servicer.GetFouls,
                    request_deserializer=stats__pb2.GetFoulsRequest.FromString,
                    response_serializer=stats__pb2.GetFoulsResponse.SerializeToString,
            ),
            'GetOffsides': grpc.unary_unary_rpc_method_handler(
                    servicer.GetOffsides,
                    request_deserializer=stats__pb2.GetOffsidesRequest.FromString,
                    response_serializer=stats__pb2.GetOffsidesResponse.SerializeToString,
            ),
            'SetShot': grpc.unary_unary_rpc_method_handler(
                    servicer.SetShot,
                    request_deserializer=stats__pb2.SetShotRequest.FromString,
                    response_serializer=stats__pb2.SetShotResponse.SerializeToString,
            ),
            'SetFoul': grpc.unary_unary_rpc_method_handler(
                    servicer.SetFoul,
                    request_deserializer=stats__pb2.SetFoulRequest.FromString,
                    response_serializer=stats__pb2.SetFoulResponse.SerializeToString,
            ),
            'SetOffside': grpc.unary_unary_rpc_method_handler(
                    servicer.SetOffside,
                    request_deserializer=stats__pb2.SetOffsideRequest.FromString,
                    response_serializer=stats__pb2.SetOffsideResponse.SerializeToString,
            ),
            'SetEndGame': grpc.unary_unary_rpc_method_handler(
                    servicer.SetEndGame,
                    request_deserializer=stats__pb2.SetEndGameRequest.FromString,
                    response_serializer=stats__pb2.SetEndGameResponse.SerializeToString,
            ),
            'SetEvent': grpc.unary_unary_rpc_method_handler(
                    servicer.SetEvent,
                    request_deserializer=stats__pb2.SetEventRequest.FromString,
                    response_serializer=stats__pb2.SetEventResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'stats.Stats', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class Stats(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def CreateGame(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/stats.Stats/CreateGame',
            stats__pb2.CreateGameRequest.SerializeToString,
            stats__pb2.CreateGameResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetShots(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/stats.Stats/GetShots',
            stats__pb2.GetShotsRequest.SerializeToString,
            stats__pb2.GetShotsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetFouls(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/stats.Stats/GetFouls',
            stats__pb2.GetFoulsRequest.SerializeToString,
            stats__pb2.GetFoulsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetOffsides(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/stats.Stats/GetOffsides',
            stats__pb2.GetOffsidesRequest.SerializeToString,
            stats__pb2.GetOffsidesResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SetShot(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/stats.Stats/SetShot',
            stats__pb2.SetShotRequest.SerializeToString,
            stats__pb2.SetShotResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SetFoul(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/stats.Stats/SetFoul',
            stats__pb2.SetFoulRequest.SerializeToString,
            stats__pb2.SetFoulResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SetOffside(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/stats.Stats/SetOffside',
            stats__pb2.SetOffsideRequest.SerializeToString,
            stats__pb2.SetOffsideResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SetEndGame(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/stats.Stats/SetEndGame',
            stats__pb2.SetEndGameRequest.SerializeToString,
            stats__pb2.SetEndGameResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SetEvent(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/stats.Stats/SetEvent',
            stats__pb2.SetEventRequest.SerializeToString,
            stats__pb2.SetEventResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
